<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="top.zywork.dao.UserLabourReqDAO">

    <sql id="select_columns">
        t_labour_req.id as labourReqId, t_labour_req.user_id as labourReqUserId, t_labour_req.comp_name as labourReqCompName, t_labour_req.work_type as labourReqWorkType, t_labour_req.job_type as labourReqJobType, t_labour_req.work_addr as labourReqWorkAddr, t_labour_req.addr_desc as labourReqAddrDesc, t_labour_req.treatment as labourReqTreatment, t_labour_req.phone as labourReqPhone, t_labour_req.memo as labourReqMemo, t_labour_req.version as labourReqVersion, t_labour_req.create_time as labourReqCreateTime, t_labour_req.update_time as labourReqUpdateTime, t_labour_req.is_active as labourReqIsActive, t_user_detail.nickname as userDetailNickname, t_user_detail.headicon as userDetailHeadicon, t_user_detail.gender as userDetailGender
    </sql>

    <sql id="query_where_clause">
        <if test="query != null and query.labourReqId != null">
			and t_labour_req.id = #{query.labourReqId}
		</if>
		<if test="query != null and query.labourReqIdMin != null and query.labourReqIdMax == null">
			and t_labour_req.id <![CDATA[ >= ]]> #{query.labourReqIdMin}
		</if>
		<if test="query != null and query.labourReqIdMin == null and query.labourReqIdMax != null">
			and t_labour_req.id <![CDATA[ <= ]]> #{query.labourReqIdMax}
		</if>
		<if test="query != null and query.labourReqIdMin != null and query.labourReqIdMax != null">
			and t_labour_req.id <![CDATA[ >= ]]> #{query.labourReqIdMin} and t_labour_req.id <![CDATA[ <= ]]> #{query.labourReqIdMax}
		</if>
		<if test="query != null and query.labourReqUserId != null">
			and t_labour_req.user_id = #{query.labourReqUserId}
		</if>
		<if test="query != null and query.labourReqUserIdMin != null and query.labourReqUserIdMax == null">
			and t_labour_req.user_id <![CDATA[ >= ]]> #{query.labourReqUserIdMin}
		</if>
		<if test="query != null and query.labourReqUserIdMin == null and query.labourReqUserIdMax != null">
			and t_labour_req.user_id <![CDATA[ <= ]]> #{query.labourReqUserIdMax}
		</if>
		<if test="query != null and query.labourReqUserIdMin != null and query.labourReqUserIdMax != null">
			and t_labour_req.user_id <![CDATA[ >= ]]> #{query.labourReqUserIdMin} and t_labour_req.user_id <![CDATA[ <= ]]> #{query.labourReqUserIdMax}
		</if>
		<if test="query != null and query.labourReqCompName != null and query.labourReqCompName != ''">
			and t_labour_req.comp_name like concat('%', #{query.labourReqCompName}, '%')
		</if>
		<if test="query != null and query.labourReqWorkType != null and query.labourReqWorkType != ''">
			and t_labour_req.work_type like concat('%', #{query.labourReqWorkType}, '%')
		</if>
		<if test="query != null and query.labourReqJobType != null and query.labourReqJobType != ''">
			and t_labour_req.job_type like concat('%', #{query.labourReqJobType}, '%')
		</if>
		<if test="query != null and query.labourReqWorkAddr != null and query.labourReqWorkAddr != ''">
			and t_labour_req.work_addr like concat('%', #{query.labourReqWorkAddr}, '%')
		</if>
		<if test="query != null and query.labourReqAddrDesc != null and query.labourReqAddrDesc != ''">
			and t_labour_req.addr_desc like concat('%', #{query.labourReqAddrDesc}, '%')
		</if>
		<if test="query != null and query.labourReqTreatment != null and query.labourReqTreatment != ''">
			and t_labour_req.treatment like concat('%', #{query.labourReqTreatment}, '%')
		</if>
		<if test="query != null and query.labourReqPhone != null and query.labourReqPhone != ''">
			and t_labour_req.phone like concat('%', #{query.labourReqPhone}, '%')
		</if>
		<if test="query != null and query.labourReqMemo != null and query.labourReqMemo != ''">
			and t_labour_req.memo like concat('%', #{query.labourReqMemo}, '%')
		</if>
		<if test="query != null and query.labourReqVersion != null">
			and t_labour_req.version = #{query.labourReqVersion}
		</if>
		<if test="query != null and query.labourReqVersionMin != null and query.labourReqVersionMax == null">
			and t_labour_req.version <![CDATA[ >= ]]> #{query.labourReqVersionMin}
		</if>
		<if test="query != null and query.labourReqVersionMin == null and query.labourReqVersionMax != null">
			and t_labour_req.version <![CDATA[ <= ]]> #{query.labourReqVersionMax}
		</if>
		<if test="query != null and query.labourReqVersionMin != null and query.labourReqVersionMax != null">
			and t_labour_req.version <![CDATA[ >= ]]> #{query.labourReqVersionMin} and t_labour_req.version <![CDATA[ <= ]]> #{query.labourReqVersionMax}
		</if>
		<if test="query != null and query.labourReqCreateTime != null">
			and t_labour_req.create_time = #{query.labourReqCreateTime}
		</if>
		<if test="query != null and query.labourReqCreateTimeMin != null and query.labourReqCreateTimeMax == null">
			and t_labour_req.create_time <![CDATA[ >= ]]> #{query.labourReqCreateTimeMin}
		</if>
		<if test="query != null and query.labourReqCreateTimeMin == null and query.labourReqCreateTimeMax != null">
			and t_labour_req.create_time <![CDATA[ <= ]]> #{query.labourReqCreateTimeMax}
		</if>
		<if test="query != null and query.labourReqCreateTimeMin != null and query.labourReqCreateTimeMax != null">
			and t_labour_req.create_time <![CDATA[ >= ]]> #{query.labourReqCreateTimeMin} and t_labour_req.create_time <![CDATA[ <= ]]> #{query.labourReqCreateTimeMax}
		</if>
		<if test="query != null and query.labourReqUpdateTime != null">
			and t_labour_req.update_time = #{query.labourReqUpdateTime}
		</if>
		<if test="query != null and query.labourReqUpdateTimeMin != null and query.labourReqUpdateTimeMax == null">
			and t_labour_req.update_time <![CDATA[ >= ]]> #{query.labourReqUpdateTimeMin}
		</if>
		<if test="query != null and query.labourReqUpdateTimeMin == null and query.labourReqUpdateTimeMax != null">
			and t_labour_req.update_time <![CDATA[ <= ]]> #{query.labourReqUpdateTimeMax}
		</if>
		<if test="query != null and query.labourReqUpdateTimeMin != null and query.labourReqUpdateTimeMax != null">
			and t_labour_req.update_time <![CDATA[ >= ]]> #{query.labourReqUpdateTimeMin} and t_labour_req.update_time <![CDATA[ <= ]]> #{query.labourReqUpdateTimeMax}
		</if>
		<if test="query != null and query.labourReqIsActive != null">
			and t_labour_req.is_active = #{query.labourReqIsActive}
		</if>
		<if test="query != null and query.labourReqIsActiveMin != null and query.labourReqIsActiveMax == null">
			and t_labour_req.is_active <![CDATA[ >= ]]> #{query.labourReqIsActiveMin}
		</if>
		<if test="query != null and query.labourReqIsActiveMin == null and query.labourReqIsActiveMax != null">
			and t_labour_req.is_active <![CDATA[ <= ]]> #{query.labourReqIsActiveMax}
		</if>
		<if test="query != null and query.labourReqIsActiveMin != null and query.labourReqIsActiveMax != null">
			and t_labour_req.is_active <![CDATA[ >= ]]> #{query.labourReqIsActiveMin} and t_labour_req.is_active <![CDATA[ <= ]]> #{query.labourReqIsActiveMax}
		</if>
		<if test="query != null and query.userDetailNickname != null and query.userDetailNickname != ''">
			and t_user_detail.nickname like concat('%', #{query.userDetailNickname}, '%')
		</if>
		<if test="query != null and query.userDetailHeadicon != null and query.userDetailHeadicon != ''">
			and t_user_detail.headicon like concat('%', #{query.userDetailHeadicon}, '%')
		</if>
		<if test="query != null and query.userDetailGender != null">
			and t_user_detail.gender = #{query.userDetailGender}
		</if>
		<if test="query != null and query.userDetailGenderMin != null and query.userDetailGenderMax == null">
			and t_user_detail.gender <![CDATA[ >= ]]> #{query.userDetailGenderMin}
		</if>
		<if test="query != null and query.userDetailGenderMin == null and query.userDetailGenderMax != null">
			and t_user_detail.gender <![CDATA[ <= ]]> #{query.userDetailGenderMax}
		</if>
		<if test="query != null and query.userDetailGenderMin != null and query.userDetailGenderMax != null">
			and t_user_detail.gender <![CDATA[ >= ]]> #{query.userDetailGenderMin} and t_user_detail.gender <![CDATA[ <= ]]> #{query.userDetailGenderMax}
		</if>
		
        and
        t_labour_req.user_id = t_user_detail.id
    </sql>

    <select id="listById" parameterType="long" resultType="userLabourReqDO">
        select
        <include refid="select_columns"/>
        from t_labour_req, t_user_detail where t_labour_req.id = #{id} and
        t_labour_req.user_id = t_user_detail.id
    </select>

    <select id="listAll" resultType="userLabourReqDO">
        select
        <include refid="select_columns"/>
        from t_labour_req, t_user_detail
        where
        t_labour_req.user_id = t_user_detail.id
        order by t_labour_req.update_time desc, t_labour_req.create_time desc
    </select>

    <select id="listAllByCondition" resultType="userLabourReqDO">
        select
        <include refid="select_columns"/>
        from t_labour_req, t_user_detail
        <where>
            <include refid="query_where_clause"/>
        </where>
        order by
        <if test="query.sortColumn != null and query.sortColumn != ''">
            ${query.sortColumn} ${query.sortOrder}
        </if>
        <if test="query.sortColumn == null or query.sortColumn == ''">
            t_labour_req.update_time desc, t_labour_req.create_time desc
        </if>
    </select>

    <select id="listPageByCondition" resultType="userLabourReqDO">
        select
        <include refid="select_columns"/>
        from t_labour_req, t_user_detail
        <where>
            <include refid="query_where_clause"/>
        </where>
        order by
        <if test="query.sortColumn != null and query.sortColumn != ''">
            ${query.sortColumn} ${query.sortOrder}
        </if>
        <if test="query.sortColumn == null or query.sortColumn == ''">
            t_labour_req.update_time desc, t_labour_req.create_time desc
        </if>
        limit #{query.beginIndex}, #{query.pageSize}
    </select>

    <select id="countByCondition" resultType="long">
        select count(*) from t_labour_req, t_user_detail
        <where>
            <include refid="query_where_clause"/>
        </where>
    </select>

</mapper>
